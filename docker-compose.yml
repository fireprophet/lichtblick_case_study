version: '3.8'

services:
  airflow:
    build: ./airflow
    container_name: airflow
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://etluser:etlpass@postgres:5432/etldb
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./sqlite:/opt/airflow/sqlite
      - ./airflow/db:/opt/airflow
      - ./sql:/opt/airflow/sql
    ports:
      - "8081:8080"
    networks:
      - etl_net
    command: webserver

  airflow-scheduler:
    build: ./airflow
    container_name: airflow-scheduler
    depends_on:
      - airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./sqlite:/opt/airflow/sqlite
      - ./airflow/db:/opt/airflow
      - ./sql:/opt/airflow/sql
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://etluser:etlpass@postgres:5432/etldb
    networks:
      - etl_net
    command: scheduler

  airflow-init:
    build: ./airflow
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://etluser:etlpass@postgres:5432/etldb
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"
    networks:
      - etl_net

  etl-runner:
    build: ./etl_loader
    container_name: etl-runner
    command: ["uvicorn", "etl_runner:app", "--host", "0.0.0.0", "--port", "8888"]
    entrypoint: []
    volumes:
      - ./matchings:/app/matchings
    ports:
      - "8888:8888"
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_BUCKET: srcdata
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: etldb
      POSTGRES_USER: etluser
      POSTGRES_PASSWORD: etlpass
    networks:
      - etl_net
    depends_on:
      - minio
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: etldb
      POSTGRES_USER: etluser
      POSTGRES_PASSWORD: etlpass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - etl_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - etl_net

  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - ./minio_data/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - etl_net

  init:
    image: alpine:latest
    depends_on:
      - minio
    volumes:
      - ./init:/init
      - ./minio_data/srcdatafiles:/srcdata
    entrypoint: ["/bin/sh", "-c"]
    command:
      - sleep 10 && chmod +x /init/mc /init/init.sh && /init/init.sh
    networks:
      - etl_net

networks:
  etl_net:
    driver: bridge

volumes:
  pgdata:
